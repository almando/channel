<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Caixa', 'doctrine');

/**
 * BaseCaixa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $lancamento
 * @property string $custo
 * @property string $numerodocumento
 * @property decimal $valor
 * @property Date $data
 * @property string $historico
 * @property string $usuario
 * @property string $contrato
 * @property string $contacorrente
 * @property integer $registrocontacorrente
 * @property integer $cheque
 * @property Date $bompara
 * 
 * @method string  getLancamento()            Returns the current record's "lancamento" value
 * @method string  getCusto()                 Returns the current record's "custo" value
 * @method string  getNumerodocumento()       Returns the current record's "numerodocumento" value
 * @method decimal getValor()                 Returns the current record's "valor" value
 * @method Date    getData()                  Returns the current record's "data" value
 * @method string  getHistorico()             Returns the current record's "historico" value
 * @method string  getUsuario()               Returns the current record's "usuario" value
 * @method string  getContrato()              Returns the current record's "contrato" value
 * @method string  getContacorrente()         Returns the current record's "contacorrente" value
 * @method integer getRegistrocontacorrente() Returns the current record's "registrocontacorrente" value
 * @method integer getCheque()                Returns the current record's "cheque" value
 * @method Date    getBompara()               Returns the current record's "bompara" value
 * @method Caixa   setLancamento()            Sets the current record's "lancamento" value
 * @method Caixa   setCusto()                 Sets the current record's "custo" value
 * @method Caixa   setNumerodocumento()       Sets the current record's "numerodocumento" value
 * @method Caixa   setValor()                 Sets the current record's "valor" value
 * @method Caixa   setData()                  Sets the current record's "data" value
 * @method Caixa   setHistorico()             Sets the current record's "historico" value
 * @method Caixa   setUsuario()               Sets the current record's "usuario" value
 * @method Caixa   setContrato()              Sets the current record's "contrato" value
 * @method Caixa   setContacorrente()         Sets the current record's "contacorrente" value
 * @method Caixa   setRegistrocontacorrente() Sets the current record's "registrocontacorrente" value
 * @method Caixa   setCheque()                Sets the current record's "cheque" value
 * @method Caixa   setBompara()               Sets the current record's "bompara" value
 * 
 * @package    test_laiguAdminTheme
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCaixa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('caixa');
        $this->hasColumn('lancamento', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
        $this->hasColumn('custo', 'string', 90, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '90',
             ));
        $this->hasColumn('numerodocumento', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('valor', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('data', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('historico', 'string', 240, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '240',
             ));
        $this->hasColumn('usuario', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('contrato', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('contacorrente', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('registrocontacorrente', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cheque', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('bompara', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}