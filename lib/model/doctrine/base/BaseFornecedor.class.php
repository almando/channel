<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Fornecedor', 'doctrine');

/**
 * BaseFornecedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $codigo
 * @property string $nome
 * @property string $endereco
 * @property string $bairro
 * @property string $cidade
 * @property string $numero
 * @property string $estado
 * @property string $cep
 * @property string $telefone
 * @property string $contato
 * @property string $fax
 * @property string $email
 * @property integer $pessoafisica
 * @property string $cgc
 * @property string $ie
 * @property string $cpf
 * 
 * @method string     getCodigo()       Returns the current record's "codigo" value
 * @method string     getNome()         Returns the current record's "nome" value
 * @method string     getEndereco()     Returns the current record's "endereco" value
 * @method string     getBairro()       Returns the current record's "bairro" value
 * @method string     getCidade()       Returns the current record's "cidade" value
 * @method string     getNumero()       Returns the current record's "numero" value
 * @method string     getEstado()       Returns the current record's "estado" value
 * @method string     getCep()          Returns the current record's "cep" value
 * @method string     getTelefone()     Returns the current record's "telefone" value
 * @method string     getContato()      Returns the current record's "contato" value
 * @method string     getFax()          Returns the current record's "fax" value
 * @method string     getEmail()        Returns the current record's "email" value
 * @method integer    getPessoafisica() Returns the current record's "pessoafisica" value
 * @method string     getCgc()          Returns the current record's "cgc" value
 * @method string     getIe()           Returns the current record's "ie" value
 * @method string     getCpf()          Returns the current record's "cpf" value
 * @method Fornecedor setCodigo()       Sets the current record's "codigo" value
 * @method Fornecedor setNome()         Sets the current record's "nome" value
 * @method Fornecedor setEndereco()     Sets the current record's "endereco" value
 * @method Fornecedor setBairro()       Sets the current record's "bairro" value
 * @method Fornecedor setCidade()       Sets the current record's "cidade" value
 * @method Fornecedor setNumero()       Sets the current record's "numero" value
 * @method Fornecedor setEstado()       Sets the current record's "estado" value
 * @method Fornecedor setCep()          Sets the current record's "cep" value
 * @method Fornecedor setTelefone()     Sets the current record's "telefone" value
 * @method Fornecedor setContato()      Sets the current record's "contato" value
 * @method Fornecedor setFax()          Sets the current record's "fax" value
 * @method Fornecedor setEmail()        Sets the current record's "email" value
 * @method Fornecedor setPessoafisica() Sets the current record's "pessoafisica" value
 * @method Fornecedor setCgc()          Sets the current record's "cgc" value
 * @method Fornecedor setIe()           Sets the current record's "ie" value
 * @method Fornecedor setCpf()          Sets the current record's "cpf" value
 * 
 * @package    test_laiguAdminTheme
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseFornecedor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fornecedor');
        $this->hasColumn('codigo', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('nome', 'string', 105, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '105',
             ));
        $this->hasColumn('endereco', 'string', 90, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '90',
             ));
        $this->hasColumn('bairro', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('cidade', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('numero', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('estado', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('cep', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('telefone', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('contato', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '75',
             ));
        $this->hasColumn('fax', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('email', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '150',
             ));
        $this->hasColumn('pessoafisica', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cgc', 'string', 54, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '54',
             ));
        $this->hasColumn('ie', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('cpf', 'string', 42, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '42',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}