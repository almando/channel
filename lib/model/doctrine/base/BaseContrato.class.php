<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contrato', 'doctrine');

/**
 * BaseContrato
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $numerocontrato
 * @property string $codigocliente
 * @property Date $datacontrato
 * @property string $tipocontrato
 * @property string $categoria
 * @property string $area
 * @property string $numeroaparelho
 * @property string $numerocircuito
 * @property string $tipopagamento
 * @property string $diapagamento
 * @property decimal $valoradesao
 * @property decimal $valormanutencao
 * @property string $parcelasadesao
 * @property Date $datapagamentoadesao
 * @property string $pontosadicionais
 * @property decimal $valorpontoadcional
 * @property string $observacao
 * @property integer $suspenso
 * @property Date $aviso1
 * @property Date $aviso2
 * @property Date $datacorte
 * @property Date $dataligacao
 * @property string $numerocc
 * 
 * @method string   getNumerocontrato()      Returns the current record's "numerocontrato" value
 * @method string   getCodigocliente()       Returns the current record's "codigocliente" value
 * @method Date     getDatacontrato()        Returns the current record's "datacontrato" value
 * @method string   getTipocontrato()        Returns the current record's "tipocontrato" value
 * @method string   getCategoria()           Returns the current record's "categoria" value
 * @method string   getArea()                Returns the current record's "area" value
 * @method string   getNumeroaparelho()      Returns the current record's "numeroaparelho" value
 * @method string   getNumerocircuito()      Returns the current record's "numerocircuito" value
 * @method string   getTipopagamento()       Returns the current record's "tipopagamento" value
 * @method string   getDiapagamento()        Returns the current record's "diapagamento" value
 * @method decimal  getValoradesao()         Returns the current record's "valoradesao" value
 * @method decimal  getValormanutencao()     Returns the current record's "valormanutencao" value
 * @method string   getParcelasadesao()      Returns the current record's "parcelasadesao" value
 * @method Date     getDatapagamentoadesao() Returns the current record's "datapagamentoadesao" value
 * @method string   getPontosadicionais()    Returns the current record's "pontosadicionais" value
 * @method decimal  getValorpontoadcional()  Returns the current record's "valorpontoadcional" value
 * @method string   getObservacao()          Returns the current record's "observacao" value
 * @method integer  getSuspenso()            Returns the current record's "suspenso" value
 * @method Date     getAviso1()              Returns the current record's "aviso1" value
 * @method Date     getAviso2()              Returns the current record's "aviso2" value
 * @method Date     getDatacorte()           Returns the current record's "datacorte" value
 * @method Date     getDataligacao()         Returns the current record's "dataligacao" value
 * @method string   getNumerocc()            Returns the current record's "numerocc" value
 * @method Contrato setNumerocontrato()      Sets the current record's "numerocontrato" value
 * @method Contrato setCodigocliente()       Sets the current record's "codigocliente" value
 * @method Contrato setDatacontrato()        Sets the current record's "datacontrato" value
 * @method Contrato setTipocontrato()        Sets the current record's "tipocontrato" value
 * @method Contrato setCategoria()           Sets the current record's "categoria" value
 * @method Contrato setArea()                Sets the current record's "area" value
 * @method Contrato setNumeroaparelho()      Sets the current record's "numeroaparelho" value
 * @method Contrato setNumerocircuito()      Sets the current record's "numerocircuito" value
 * @method Contrato setTipopagamento()       Sets the current record's "tipopagamento" value
 * @method Contrato setDiapagamento()        Sets the current record's "diapagamento" value
 * @method Contrato setValoradesao()         Sets the current record's "valoradesao" value
 * @method Contrato setValormanutencao()     Sets the current record's "valormanutencao" value
 * @method Contrato setParcelasadesao()      Sets the current record's "parcelasadesao" value
 * @method Contrato setDatapagamentoadesao() Sets the current record's "datapagamentoadesao" value
 * @method Contrato setPontosadicionais()    Sets the current record's "pontosadicionais" value
 * @method Contrato setValorpontoadcional()  Sets the current record's "valorpontoadcional" value
 * @method Contrato setObservacao()          Sets the current record's "observacao" value
 * @method Contrato setSuspenso()            Sets the current record's "suspenso" value
 * @method Contrato setAviso1()              Sets the current record's "aviso1" value
 * @method Contrato setAviso2()              Sets the current record's "aviso2" value
 * @method Contrato setDatacorte()           Sets the current record's "datacorte" value
 * @method Contrato setDataligacao()         Sets the current record's "dataligacao" value
 * @method Contrato setNumerocc()            Sets the current record's "numerocc" value
 * 
 * @package    test_laiguAdminTheme
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseContrato extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contrato');
        $this->hasColumn('numerocontrato', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '15',
             ));
        $this->hasColumn('codigocliente', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('datacontrato', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipocontrato', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('categoria', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('area', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('numeroaparelho', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('numerocircuito', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('tipopagamento', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('diapagamento', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('valoradesao', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('valormanutencao', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('parcelasadesao', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '6',
             ));
        $this->hasColumn('datapagamentoadesao', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('pontosadicionais', 'string', 9, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '9',
             ));
        $this->hasColumn('valorpontoadcional', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('observacao', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '150',
             ));
        $this->hasColumn('suspenso', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('aviso1', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('aviso2', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('datacorte', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('dataligacao', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('numerocc', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}