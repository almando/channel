<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contasreceber', 'doctrine');

/**
 * BaseContasreceber
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $numerodocumento
 * @property string $numerocontrato
 * @property Date $dataemissao
 * @property Date $datavencimento
 * @property decimal $valor
 * @property string $controlecusto
 * @property string $historico
 * @property Date $datapagamento
 * @property decimal $desconto
 * @property decimal $juros
 * @property decimal $multa
 * @property integer $caixa
 * @property string $numeroconta
 * @property string $cliente
 * @property string $tipocobranca
 * @property string $lancamentocaixa
 * 
 * @method string        getNumerodocumento() Returns the current record's "numerodocumento" value
 * @method string        getNumerocontrato()  Returns the current record's "numerocontrato" value
 * @method Date          getDataemissao()     Returns the current record's "dataemissao" value
 * @method Date          getDatavencimento()  Returns the current record's "datavencimento" value
 * @method decimal       getValor()           Returns the current record's "valor" value
 * @method string        getControlecusto()   Returns the current record's "controlecusto" value
 * @method string        getHistorico()       Returns the current record's "historico" value
 * @method Date          getDatapagamento()   Returns the current record's "datapagamento" value
 * @method decimal       getDesconto()        Returns the current record's "desconto" value
 * @method decimal       getJuros()           Returns the current record's "juros" value
 * @method decimal       getMulta()           Returns the current record's "multa" value
 * @method integer       getCaixa()           Returns the current record's "caixa" value
 * @method string        getNumeroconta()     Returns the current record's "numeroconta" value
 * @method string        getCliente()         Returns the current record's "cliente" value
 * @method string        getTipocobranca()    Returns the current record's "tipocobranca" value
 * @method string        getLancamentocaixa() Returns the current record's "lancamentocaixa" value
 * @method Contasreceber setNumerodocumento() Sets the current record's "numerodocumento" value
 * @method Contasreceber setNumerocontrato()  Sets the current record's "numerocontrato" value
 * @method Contasreceber setDataemissao()     Sets the current record's "dataemissao" value
 * @method Contasreceber setDatavencimento()  Sets the current record's "datavencimento" value
 * @method Contasreceber setValor()           Sets the current record's "valor" value
 * @method Contasreceber setControlecusto()   Sets the current record's "controlecusto" value
 * @method Contasreceber setHistorico()       Sets the current record's "historico" value
 * @method Contasreceber setDatapagamento()   Sets the current record's "datapagamento" value
 * @method Contasreceber setDesconto()        Sets the current record's "desconto" value
 * @method Contasreceber setJuros()           Sets the current record's "juros" value
 * @method Contasreceber setMulta()           Sets the current record's "multa" value
 * @method Contasreceber setCaixa()           Sets the current record's "caixa" value
 * @method Contasreceber setNumeroconta()     Sets the current record's "numeroconta" value
 * @method Contasreceber setCliente()         Sets the current record's "cliente" value
 * @method Contasreceber setTipocobranca()    Sets the current record's "tipocobranca" value
 * @method Contasreceber setLancamentocaixa() Sets the current record's "lancamentocaixa" value
 * 
 * @package    test_laiguAdminTheme
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseContasreceber extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contasreceber');
        $this->hasColumn('numerodocumento', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('numerocontrato', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('dataemissao', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('datavencimento', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('valor', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('controlecusto', 'string', 90, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '90',
             ));
        $this->hasColumn('historico', 'string', 240, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '240',
             ));
        $this->hasColumn('datapagamento', 'Date', null, array(
             'type' => 'Date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('desconto', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('juros', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('multa', 'decimal', 21, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '21',
             'scale' => ' 4',
             ));
        $this->hasColumn('caixa', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('numeroconta', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('cliente', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('tipocobranca', 'string', 3, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '3',
             ));
        $this->hasColumn('lancamentocaixa', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}