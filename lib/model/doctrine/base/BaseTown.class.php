<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Town', 'doctrine');

/**
 * BaseTown
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $zip
 * @property string $town
 * @property integer $state_id
 * @property string $country
 * @property State $State
 * 
 * @method integer getId()       Returns the current record's "id" value
 * @method string  getZip()      Returns the current record's "zip" value
 * @method string  getTown()     Returns the current record's "town" value
 * @method integer getStateId()  Returns the current record's "state_id" value
 * @method string  getCountry()  Returns the current record's "country" value
 * @method State   getState()    Returns the current record's "State" value
 * @method Town    setId()       Sets the current record's "id" value
 * @method Town    setZip()      Sets the current record's "zip" value
 * @method Town    setTown()     Sets the current record's "town" value
 * @method Town    setStateId()  Sets the current record's "state_id" value
 * @method Town    setCountry()  Sets the current record's "country" value
 * @method Town    setState()    Sets the current record's "State" value
 * 
 * @package    test_laiguAdminTheme
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTown extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('town');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('zip', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('town', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '150',
             ));
        $this->hasColumn('state_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('country', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '150',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('State', array(
             'local' => 'state_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}